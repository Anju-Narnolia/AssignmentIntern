{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  register: (email, password) => api.post('/auth/register', {\n    email,\n    password\n  }),\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  getCurrentUser: () => api.get('/auth/me')\n};\n\n// Sessions API calls\nexport const sessionsAPI = {\n  // Get all published sessions (public)\n  getPublicSessions: () => api.get('/sessions'),\n  // Get user's own sessions (draft + published)\n  getMySessions: () => api.get('/sessions/my-sessions'),\n  // Get a single user session\n  getMySession: id => api.get(`/sessions/my-sessions/${id}`),\n  // Save or update a draft session\n  saveDraft: data => api.post('/sessions/save-draft', data),\n  // Publish a session\n  publishSession: sessionId => api.post('/sessions/publish', {\n    sessionId\n  }),\n  // Delete a session\n  deleteSession: id => api.delete(`/sessions/my-sessions/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","email","password","post","login","getCurrentUser","get","sessionsAPI","getPublicSessions","getMySessions","getMySession","id","saveDraft","data","publishSession","sessionId","deleteSession","delete"],"sources":["/Users/akshaykumar/Desktop/wellness-platform/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const authAPI = {\n  register: (email, password) => \n    api.post('/auth/register', { email, password }),\n  \n  login: (email, password) => \n    api.post('/auth/login', { email, password }),\n  \n  getCurrentUser: () => \n    api.get('/auth/me'),\n};\n\n// Sessions API calls\nexport const sessionsAPI = {\n  // Get all published sessions (public)\n  getPublicSessions: () => \n    api.get('/sessions'),\n  \n  // Get user's own sessions (draft + published)\n  getMySessions: () => \n    api.get('/sessions/my-sessions'),\n  \n  // Get a single user session\n  getMySession: (id) => \n    api.get(`/sessions/my-sessions/${id}`),\n  \n  // Save or update a draft session\n  saveDraft: (data) => \n    api.post('/sessions/save-draft', data),\n  \n  // Publish a session\n  publishSession: (sessionId) => \n    api.post('/sessions/publish', { sessionId }),\n  \n  // Delete a session\n  deleteSession: (id) => \n    api.delete(`/sessions/my-sessions/${id}`),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACI,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClCR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,OAAO,GAAG;EACrBC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KACxBzB,GAAG,CAAC0B,IAAI,CAAC,gBAAgB,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EAEjDE,KAAK,EAAEA,CAACH,KAAK,EAAEC,QAAQ,KACrBzB,GAAG,CAAC0B,IAAI,CAAC,aAAa,EAAE;IAAEF,KAAK;IAAEC;EAAS,CAAC,CAAC;EAE9CG,cAAc,EAAEA,CAAA,KACd5B,GAAG,CAAC6B,GAAG,CAAC,UAAU;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,iBAAiB,EAAEA,CAAA,KACjB/B,GAAG,CAAC6B,GAAG,CAAC,WAAW,CAAC;EAEtB;EACAG,aAAa,EAAEA,CAAA,KACbhC,GAAG,CAAC6B,GAAG,CAAC,uBAAuB,CAAC;EAElC;EACAI,YAAY,EAAGC,EAAE,IACflC,GAAG,CAAC6B,GAAG,CAAC,yBAAyBK,EAAE,EAAE,CAAC;EAExC;EACAC,SAAS,EAAGC,IAAI,IACdpC,GAAG,CAAC0B,IAAI,CAAC,sBAAsB,EAAEU,IAAI,CAAC;EAExC;EACAC,cAAc,EAAGC,SAAS,IACxBtC,GAAG,CAAC0B,IAAI,CAAC,mBAAmB,EAAE;IAAEY;EAAU,CAAC,CAAC;EAE9C;EACAC,aAAa,EAAGL,EAAE,IAChBlC,GAAG,CAACwC,MAAM,CAAC,yBAAyBN,EAAE,EAAE;AAC5C,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}